[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "torob-scraper"
version = "1.0.0"
description = "Advanced Automotive Parts Price Scraper with Web Interface"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Torob Scraper Team", email = "contact@torobscraper.com"}
]
maintainers = [
    {name = "Torob Scraper Team", email = "contact@torobscraper.com"}
]
keywords = ["scraping", "automotive", "parts", "prices", "torob", "web-scraping", "playwright", "flask"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial :: Investment",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Web Environment",
    "Framework :: Flask",
]
requires-python = ">=3.8"
dependencies = [
    "playwright>=1.40.0",
    "pandas>=2.2.0",
    "openpyxl>=3.1.2",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.2",
    "aiohttp>=3.9.1",
    "lxml>=4.9.3",
    "xlsxwriter>=3.1.9",
    "numpy>=1.26.0",
    "python-dateutil>=2.8.2",
    "PyYAML>=6.0",
    "Flask>=2.3.0",
    "Werkzeug>=2.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",
]

[project.scripts]
torob-scraper-cli = "main_torob_cli:main"
torob-scraper-web = "web_app:main"

[project.urls]
Homepage = "https://github.com/oshaghisina/Car-parts-Market-Research"
Documentation = "https://github.com/oshaghisina/Car-parts-Market-Research/wiki"
Repository = "https://github.com/oshaghisina/Car-parts-Market-Research"
"Bug Tracker" = "https://github.com/oshaghisina/Car-parts-Market-Research/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.txt", "*.md"]
"templates" = ["*.html"]
"static" = ["*.css", "*.js"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["core", "adapters", "utils"]
known_third_party = ["flask", "pandas", "playwright", "requests"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "*/site-packages/*",
    "setup.py",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
